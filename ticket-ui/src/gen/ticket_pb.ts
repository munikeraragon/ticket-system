// @generated by protoc-gen-es v2.3.0 with parameter "target=ts"
// @generated from file ticket.proto (package api, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "./google/api/annotations_pb";
import type { EmptySchema } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file ticket.proto.
 */
export const file_ticket: GenFile = /*@__PURE__*/
  fileDesc("Cgx0aWNrZXQucHJvdG8SA2FwaSJtCgZUaWNrZXQSCgoCaWQYASABKAMSFQoNY3VzdG9tZXJfbmFtZRgCIAEoCRINCgVlbWFpbBgDIAEoCRISCgpjcmVhdGVkX2F0GAQgASgJEg4KBnN0YXR1cxgFIAEoCRINCgVub3RlcxgGIAEoCSIeChBHZXRUaWNrZXRSZXF1ZXN0EgoKAmlkGAEgASgDIjMKE0xpc3RUaWNrZXRzUmVzcG9uc2USHAoHdGlja2V0cxgBIAMoCzILLmFwaS5UaWNrZXQiQAoTVXBkYXRlVGlja2V0UmVxdWVzdBIKCgJpZBgBIAEoAxIOCgZzdGF0dXMYAiABKAkSDQoFbm90ZXMYAyABKAkiOwoUVXBkYXRlVGlja2V0UmVzcG9uc2USIwoOdXBkYXRlZF90aWNrZXQYASABKAsyCy5hcGkuVGlja2V0MokCCg1UaWNrZXRTZXJ2aWNlEkYKCUdldFRpY2tldBIVLmFwaS5HZXRUaWNrZXRSZXF1ZXN0GgsuYXBpLlRpY2tldCIVgtPkkwIPEg0vdGlja2V0cy97aWR9ElEKC0xpc3RUaWNrZXRzEhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5GhguYXBpLkxpc3RUaWNrZXRzUmVzcG9uc2UiEILT5JMCChIIL3RpY2tldHMSXQoMVXBkYXRlVGlja2V0EhguYXBpLlVwZGF0ZVRpY2tldFJlcXVlc3QaGS5hcGkuVXBkYXRlVGlja2V0UmVzcG9uc2UiGILT5JMCEjoBKjINL3RpY2tldHMve2lkfUI9WjtnaXRodWIuY29tL211bmlrZXIvaGFsZW4tYXBpL3NlcnZpY2VzL3RpY2tldC9nZW4vZ28vYXBpO2FwaWIGcHJvdG8z", [file_google_api_annotations, file_google_protobuf_empty]);

/**
 * @generated from message api.Ticket
 */
export type Ticket = Message<"api.Ticket"> & {
  /**
   * @generated from field: int64 id = 1;
   */
  id: bigint;

  /**
   * @generated from field: string customer_name = 2;
   */
  customerName: string;

  /**
   * @generated from field: string email = 3;
   */
  email: string;

  /**
   * ISO string
   *
   * @generated from field: string created_at = 4;
   */
  createdAt: string;

  /**
   * "open" | "pending" | "done"
   *
   * @generated from field: string status = 5;
   */
  status: string;

  /**
   * @generated from field: string notes = 6;
   */
  notes: string;
};

/**
 * Describes the message api.Ticket.
 * Use `create(TicketSchema)` to create a new message.
 */
export const TicketSchema: GenMessage<Ticket> = /*@__PURE__*/
  messageDesc(file_ticket, 0);

/**
 * @generated from message api.GetTicketRequest
 */
export type GetTicketRequest = Message<"api.GetTicketRequest"> & {
  /**
   * @generated from field: int64 id = 1;
   */
  id: bigint;
};

/**
 * Describes the message api.GetTicketRequest.
 * Use `create(GetTicketRequestSchema)` to create a new message.
 */
export const GetTicketRequestSchema: GenMessage<GetTicketRequest> = /*@__PURE__*/
  messageDesc(file_ticket, 1);

/**
 * @generated from message api.ListTicketsResponse
 */
export type ListTicketsResponse = Message<"api.ListTicketsResponse"> & {
  /**
   * @generated from field: repeated api.Ticket tickets = 1;
   */
  tickets: Ticket[];
};

/**
 * Describes the message api.ListTicketsResponse.
 * Use `create(ListTicketsResponseSchema)` to create a new message.
 */
export const ListTicketsResponseSchema: GenMessage<ListTicketsResponse> = /*@__PURE__*/
  messageDesc(file_ticket, 2);

/**
 * @generated from message api.UpdateTicketRequest
 */
export type UpdateTicketRequest = Message<"api.UpdateTicketRequest"> & {
  /**
   * @generated from field: int64 id = 1;
   */
  id: bigint;

  /**
   * @generated from field: string status = 2;
   */
  status: string;

  /**
   * @generated from field: string notes = 3;
   */
  notes: string;
};

/**
 * Describes the message api.UpdateTicketRequest.
 * Use `create(UpdateTicketRequestSchema)` to create a new message.
 */
export const UpdateTicketRequestSchema: GenMessage<UpdateTicketRequest> = /*@__PURE__*/
  messageDesc(file_ticket, 3);

/**
 * @generated from message api.UpdateTicketResponse
 */
export type UpdateTicketResponse = Message<"api.UpdateTicketResponse"> & {
  /**
   * @generated from field: api.Ticket updated_ticket = 1;
   */
  updatedTicket?: Ticket;
};

/**
 * Describes the message api.UpdateTicketResponse.
 * Use `create(UpdateTicketResponseSchema)` to create a new message.
 */
export const UpdateTicketResponseSchema: GenMessage<UpdateTicketResponse> = /*@__PURE__*/
  messageDesc(file_ticket, 4);

/**
 * @generated from service api.TicketService
 */
export const TicketService: GenService<{
  /**
   * @generated from rpc api.TicketService.GetTicket
   */
  getTicket: {
    methodKind: "unary";
    input: typeof GetTicketRequestSchema;
    output: typeof TicketSchema;
  },
  /**
   * @generated from rpc api.TicketService.ListTickets
   */
  listTickets: {
    methodKind: "unary";
    input: typeof EmptySchema;
    output: typeof ListTicketsResponseSchema;
  },
  /**
   * @generated from rpc api.TicketService.UpdateTicket
   */
  updateTicket: {
    methodKind: "unary";
    input: typeof UpdateTicketRequestSchema;
    output: typeof UpdateTicketResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_ticket, 0);

